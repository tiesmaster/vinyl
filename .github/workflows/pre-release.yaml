name: Pre-release

on:
  push:
    branches:
      - main

jobs:
  push-ci-package:

    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Install SonarCloud scanner
        run: dotnet tool install -g dotnet-sonarscanner
      - name: Build, and analyze Package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"tiesmaster_vinyl" /o:"tiesmaster" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build src/Vinyl.Package
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      - name: Push Pre-release Package
        run: dotnet nuget push src/Vinyl.Package/bin/Debug/*.nupkg --api-key ${GITHUB_TOKEN} --source https://nuget.pkg.github.com/tiesmaster/index.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push-vsix-package:

    runs-on: windows-2022
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Restore packages
        run: dotnet restore
      - name: Build VSIX project
        run: msbuild src/Vinyl.Vsix/Vinyl.Vsix.csproj /v:m /p:Configuration=Release
      - name: Push VSIX package
        shell: bash
        run: |

          uriencode() {
            s="${1//'%'/%25}"
            s="${s//' '/%20}"
            s="${s//'"'/%22}"
            s="${s//'#'/%23}"
            s="${s//'$'/%24}"
            s="${s//'&'/%26}"
            s="${s//'+'/%2B}"
            s="${s//','/%2C}"
            s="${s//'/'/%2F}"
            s="${s//':'/%3A}"
            s="${s//';'/%3B}"
            s="${s//'='/%3D}"
            s="${s//'?'/%3F}"
            s="${s//'@'/%40}"
            s="${s//'['/%5B}"
            s="${s//']'/%5D}"
            printf %s "$s"
          }

          REPO_URL=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/
          ISSUE_URL=$REPO_URL/issues/
          README_URL=https://raw.githubusercontent.com/$GITHUB_REPOSITORY/main/README.md

          PUBLISH_URL="https://www.vsixgallery.com/api/upload\
          ?repo=$(uriencode $REPO_URL)\
          &issuetracker=$(uriencode $ISSUE_URL)\
          &readmeUrl=$(uriencode $README_URL)"

          curl \
            -i \
            -X POST \
            --form file=@src/Vinyl.Vsix/bin/Release/net472/Vinyl.Vsix.vsix \
            $PUBLISH_URL